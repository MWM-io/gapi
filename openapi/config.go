package openapi

import (
	"fmt"
)

const (
	// DefaultDocURI is the URI used to host documentation UI
	DefaultDocURI = "/"
	// DocPageTitle is the URI used to host documentation UI
	DocPageTitle = "Doc | API"
	// DefaultSpecOpenAPIURI is the URI used to host the openapi file generated by this package
	DefaultSpecOpenAPIURI = "/openapi.json"
)

// Config is the default doc generator config. You can update all fields to change :
//
// - DocURI: the URI for the display of your documentation.
// - SpecOpenAPIURI: the URL for the json openapi definition of your API.
// - IgnoredPaths: the paths that shouldn't be included in the documentation.
// - Auth: your auth system to protect your documentation.
var Config config

// config contains all the options for your API documentation.
type config struct {
	// DocURI is the URI for the display of your documentation.
	DocURI string
	// SpecOpenAPIURI is the URL for the json openapi definition of your API.
	SpecOpenAPIURI string
	// IgnoredPaths are the paths that shouldn't be included in the documentation.
	IgnoredPaths []string
	// DocPageTitle is used as doc title
	DocPageTitle string
	// FaviconURL is used for web doc UI
	FaviconURL string
}

// GetDocURI return config.DocURI if a values was set otherwise DefaultDocURI is returned
func (c config) GetDocURI() string {
	if c.DocURI != "" {
		return c.DocURI
	}

	return DefaultDocURI
}

// GetSpecOpenAPIURI return config.SpecOpenAPIURI if a values was set otherwise DefaultDocURI is returned
func (c config) GetSpecOpenAPIURI() string {
	if c.SpecOpenAPIURI != "" {
		return c.SpecOpenAPIURI
	}

	return DefaultSpecOpenAPIURI
}

// GetAuthReceiverURI return
func (c config) GetAuthReceiverURI() string {
	return fmt.Sprintf("%s%s", c.GetDocURI(), "oauth-receiver.html")
}

func (c config) ignoredPaths() []string {
	ignoredPaths := []string{
		c.GetDocURI(),
		c.GetSpecOpenAPIURI(),
		c.GetAuthReceiverURI(),
	}

	return append(ignoredPaths, c.IgnoredPaths...)
}

// GetDocPageTitle return config.DocPageTitle if a values was set otherwise DocPageTitle is returned
func (c config) GetDocPageTitle() string {
	if c.DocPageTitle != "" {
		return c.DocPageTitle
	}

	return DocPageTitle
}

// GetFaviconURL return config.FaviconURL
func (c config) GetFaviconURL() string {
	return c.FaviconURL
}
